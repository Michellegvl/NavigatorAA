// import { StatusBar } from 'expo-status-bar';
// import { StyleSheet, Text, View } from 'react-native';
// import { createDrawerNavigator } from '@react-navigation/drawer';
// import { NavigationContainer } from '@react-navigation/native';
// import HomeScreen from './src/screens/HomeScreen.js';
// import Notifications from './src/screens/Notifications.js';


// const Drawer = createDrawerNavigator();

// export default function App() {
//   return (
//     <NavigationContainer>
//       <Drawer.Navigator initialRouteName="Home">
//         <Drawer.Screen name="Home" component={HomeScreen} />
//         <Drawer.Screen name="Notifications" component={Notifications} />
//       </Drawer.Navigator>
//     </NavigationContainer>
//   );
// }

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     backgroundColor: '#fff',
//     alignItems: 'center',
//     justifyContent: 'center',
//   },
// });



import { NativeBaseProvider } from 'native-base';
import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Text, View, Image} from 'react-native';
import { createDrawerNavigator } from '@react-navigation/drawer'; //se importa para la creacion del hamburguesa
import { DrawerActions, NavigationContainer } from '@react-navigation/native';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'; //se importa para el menu de abajo

//import de las pantallas
import HomeScreen from './src/screens/HomeScreen.js';
import About from './src/screens/About.js';
import registro from './src/screens/registro.js';
import LoginScreen from './src/screens/loginScreen.js';
//import para iconos
import Ionicons from 'react-native-vector-icons/Ionicons';
import ProfileScreen from './src/screens/ProfileScreen.js';

const Drawer = createDrawerNavigator(); //Para el menu de hamburguesa

const Tab = createBottomTabNavigator(); //Para el menu de abajo

export default function App() {
  return (
    //Menu de iconos
    <NativeBaseProvider>
    <NavigationContainer>
      <Tab.Navigator
        screenOptions={({ route }) => ({
          tabBarIcon: ({ focused, color, size }) => {
            let iconName;

            if (route.name === 'Home') {
              iconName = focused
                ? 'home'
                : 'home-outline';
            } else if (route.name === 'About') {
              iconName = focused ? 'information-circle' : 'information-circle-outline';
            }

            // You can return any component that you like here!
            return <Ionicons name={iconName} size={size} color={color} />;
          },
          tabBarActiveTintColor: 'tomato',
          tabBarInactiveTintColor: 'gray',
        })}
      >
        <Tab.Screen name="Home" component={HomeScreen} />
        <Tab.Screen name="About" component={About} />
        <Tab.Screen name="Profile" component={ProfileScreen} />
        <Tab.Screen name="registro" component={registro} />
      </Tab.Navigator>
    </NavigationContainer>
    </NativeBaseProvider>
    
    /*Menu de hamburguesa
    <NavigationContainer>
      <Drawer.Navigator initialRouteName='Home'>
        <Drawer.Screen name="Home" component={HomeScreen} />
        <Drawer.Screen name="About" component={AboutScreen} />
      </Drawer.Navigator>
    </NavigationContainer> 
    */
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
});


/*
import { StatusBar } from 'expo-status-bar';
import React, { useState } from 'react';
import { StyleSheet, Text, View, Image } from 'react-native';
import { createDrawerNavigator } from '@react-navigation/drawer';
import { NavigationContainer } from '@react-navigation/native';
import { NativeBaseProvider } from 'native-base';
import HomeScreen from './src/screens/HomeScreen.js';
import Notifications from './src/screens/Notifications.js';
import LoginScreen from './src/screens/loginScreen.js';

const Drawer = createDrawerNavigator();

export default function App() {
  const [isAuthenticated, setIsAuthenticated] = useState(false);

  const handleLogin = () => {
    setIsAuthenticated(true);  // Cambia el estado a "autenticado" después de iniciar sesión
  };

  return (
    <NativeBaseProvider>
      <NavigationContainer>
        {isAuthenticated ? (
          <Drawer.Navigator initialRouteName="Home">
          <Drawer.Screen name="Home" component={HomeScreen} />
          <Drawer.Screen name="Notifications" component={Notifications} />
        </Drawer.Navigator>
        
      ) : (
        <LoginScreen onLogin={handleLogin}/>  
        )}
        </NavigationContainer>
    </NativeBaseProvider>
  );
}
*/
